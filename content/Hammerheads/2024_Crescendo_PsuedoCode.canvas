{
	"nodes":[
		{"id":"92a440426ccdbe94","type":"group","x":0,"y":440,"width":1172,"height":728,"label":"Swerve"},
		{"id":"50680a1661cecfcc","type":"group","x":2680,"y":-560,"width":680,"height":940,"label":"Endgame"},
		{"id":"4754276839d44f4f","type":"group","x":-320,"y":-1680,"width":910,"height":680,"label":"Legend"},
		{"id":"9cb204f091cb8440","type":"group","x":1780,"y":-1240,"width":900,"height":178,"label":"Controllers"},
		{"id":"88d72345f73648b5","type":"text","text":"# Robot Container\n## Owned Objects\n**Type : Name : Required Info**\nCommandXboxController : Primary : Controller 1\nCommandXboxController : Secondary : Controller 2\nSubsystem : IntakeSub : None\nSubsystem : ShooterSub : None\nSubsystem : ClimberSub : None\nCommand : AutoIntakeCmd : IntakeSub\nCommand : AutoShooterCmd : ShooterSub\n## Control Bindings\n**Controller : Button : Effect**\nSecondary : Left Trigger : WhileHeld( Automated Intake Command )\nSecondary : Right Trigger : WhileHeld( Automated Shooter Command )\nSecondary : Right Bumper : IntakeSub.FeedShot()\nSecondary : Left Arrow : IntakeSub.RaiseIntake()\nSecondary : Right Arrow : IntakeSub.LowerIntake()\nSecondary : X : Intake_Sub.FeedIn()\nSecondary : Y : Intake_Sub.FeedOut()\n\nPrimary : Right Joystick : Swerve Angle Control\nPrimary : Left Joystick : Drive Translational Control\nPrimary : Y : Reset Field Centric\nPrimary : Up Arrow : Climer_Sub.ToHeight(MaxHeight)\nPrimary : Down Arrow : Climer_Sub.ToHeight(LowestHeight)\nPrimary : Right Bumper : Climer_Sub.Move(ClimberSpeed)\nPrimary : Left Bumper : Climer_Sub.Move(-ClimberSpeed)\n\n\n\n","x":1920,"y":-760,"width":620,"height":880,"color":"4"},
		{"id":"689c10c5bbfdfa06","type":"text","text":"# Secondary Controller\nShooter + intake control","x":2280,"y":-1220,"width":380,"height":138,"color":"1"},
		{"id":"f02a178141b91c2f","type":"text","text":"# Primary Controller\nDriving","x":1840,"y":-1220,"width":339,"height":138,"color":"1"},
		{"id":"d8b09029cdfc9ab5","type":"text","text":"# Automated Shooter Command\n## Requirements\n-  Shooter_Sub\n## Information Flow\n### IN\n- Shooter Angle\n- AprilTag Calculated Position\n### OUT \n- Desired swerve state\n\n## Process\n1. Sets all the positions \n\t -  request swerve drive position with correct X Y and yaw\n\t - Shooter_Sub.ToAngle(TargetAngle)\n\t - Shooter_Sub.SpinFlywheel(speed)\n","x":1220,"y":-220,"width":520,"height":740,"color":"2"},
		{"id":"0d7fe47949d560bf","type":"text","text":"# Auto Selection\nDropdown in Shuffleboard","x":2610,"y":-988,"width":380,"height":138,"color":"1"},
		{"id":"3f84f27716a59e93","type":"text","text":"# Automated Intake Command\n\n## Requirements \n- Intake Subsystem\n## Information Flow\n### IN \n- Relative Target Position\n- Intake IR Sensor\n### OUT \n- Desired Swerve State\n## Process \n1.  Tells Intake_sub to drop DropIntake() and SpinIN()\n2.  Aligns robot first to like 5-10 degrees \n\t- Requests robot turn in the oposite direction of the angle to target\n3. Requests robot to drive towards target Until Intake IR Sensor is blocked\n4. tells Intake_Sub to RaiseIntake()\n\n","x":1220,"y":-1025,"width":520,"height":779,"color":"2"},
		{"id":"69f0bad6e3b661f2","type":"text","text":"# Intake Subsystem\n## Owned Objects\n**Solenoid : PositionControlPiston**\nMoves the upper intake up and down\n**Motor : UpperIntakeMotor**\nspins the upper intake\n**Motor : LowerIntakeMotor**\nspins the lower intake\n**IR Sensor : NoteFinalPositionChecker**\ndetects when the Torus nearly reaches the shooter\n## Methods\n **FeedIn()** \n - IF (**NoteFinalPositionChecker** is clear)\n\t - Spins **UpperIntakeMotor** into robot\n\t - Spins **LowerIntakeMotor** into robot\n- ELSE \n\t- Fuck all\n**FeedOut()**\n- Spins **UpperIntakeMotor** out of robot\n- Spins  **LowerIntakeMotor** out of robot\n**Feedshot()**\n- Spins **LowerIntakeMotor** into robot\n**RaiseIntake()**\n- Contracts **PositionControlPiston**\n**LowerIntake()**\n- Extends **PositionControlPiston**","x":640,"y":-1647,"width":520,"height":855,"color":"6"},
		{"id":"3f9733d2349e77bb","type":"text","text":"# Climber Subsystem\n## Owned Objects\n**Motor : Lift_Drive_motor**\nDrives the lift up and down\n**Encoder : Height_Tracker**\ntracks revolutions of the winch, therefore tracking height\n**LimitSwitch : Home_Height_Switch**\nis triggered at some height to set height reading\n## Methods\n**Move(double speed)**\nSets **Lift_Drive_motor** to speed to move climber up or down\n**Home()**\nmoves the climber down at by setting **Lift_Drive_motor** to constant negative speed until **Home_Height_Switch** is triggered \n**ToHeight(double Height)**\nvalidates that height is within set acceptable range or automatically returns and gives error message. Makes a PID loop with a calculated desired angle for **Height_Tracker** and uses **Lift_Drive_Motor** to move to desired height.","x":2760,"y":-341,"width":520,"height":661,"color":"6"},
		{"id":"02c968e10b50fbcc","type":"text","text":"# Trap Mechanism Subsystem\n\nThe design boyos should go faster. No more sleep allowed","x":2760,"y":-521,"width":520,"height":145,"color":"6"},
		{"id":"59673aa5d927cf53","type":"text","text":"# Outside Stuff","x":246,"y":-1171,"width":324,"height":61,"color":"1"},
		{"id":"c1d0a4743640d0cb","type":"text","text":"# Subsystem","x":29,"y":-1380,"width":250,"height":50,"color":"6"},
		{"id":"9d80039772338167","type":"text","text":"# Infastructure","x":279,"y":-1620,"width":270,"height":60,"color":"4"},
		{"id":"d0983a8a502d3c67","type":"text","text":"# Command","x":-258,"y":-1615,"width":250,"height":55,"color":"2"},
		{"id":"749c26674dd17afa","type":"text","text":"# Network Tables Topic","x":-276,"y":-1171,"width":287,"height":105,"color":"5"},
		{"id":"fb5458938437d04c","type":"text","text":"# Swerve Control\n**Swerve Control Mode** (String): \"Controlled\", \"Shooting\", \"Intaking\"\n\n**Desired Pose** (Pose2D) (not used if \"Controlled\", only uses heading if \"Shooting\")","x":715,"y":160,"width":354,"height":240,"color":"5"},
		{"id":"9bcbe8409c3d8569","type":"text","text":"# Teleop Swerve Command\n## Requirements\n- Swerve Subsystem\n## Information Flow\n### IN\n- Primary controller\n- Requested swerve yaw and control mode\n### OUT\n- noneeee\n## Process\n1. Check swerve control mode, using that decide how to move\n2. Drive with swerve subsystem, combining desired position and controller input","x":632,"y":460,"width":520,"height":688,"color":"2"},
		{"id":"d4de06057521088d","type":"text","text":"# Swerve Subsystem\n## Owned Objects\n**Drivetrain: drivetrain**\nControls motors\n## Methods\n**GetSwerveOdometryPosition()**\nReturns the calculated position from odometry\n**GetAbsolutePosition()**\nCombines swerve odometry with AprilTag calculated position to get final absolute position\n**drive(xVel, yVel, rot)**\nDrives with translational velocities **xVel** and **yVel** and angular velocity **rot**\n**setDesiredPose(Pose2D)**\nMoves to desired field-relative pose","x":25,"y":526,"width":530,"height":556,"color":"6"},
		{"id":"f779bc9415192c95","type":"text","text":"# AprilTag Positioning\n**Tag Detected** (boolean)\n\n**Estimated Robot Pose** (Pose2D)","x":98,"y":-140,"width":385,"height":160,"color":"5"},
		{"id":"11eed2cce71d223c","type":"text","text":"# Shooter Subsystem\n## Owned Objects\n**Motor : FlywheelMotorOne**\nControls the first flywheel\n**Motor : FlywheelMotorTwo**\nControls the second flywheel\n**Motor : AngleControlMotor**\nControls the shooter angle\n**LimitSwitch : HomeLimit**\nused to home the shooter angle\n**AbsolutEncoder : Gear_Angle_Encoder**\ntracks the absolute angle of the gear for the shooter\n## Methods\n**MoveManual( double speed)**\nsets **Angle_Control_Motor** to speed in order to angle shooter up or down\n**SpinFlywheel(double speed)**\nSpins **Flywheel_Motor_One** and **FlyWheel_Motor_Two**  up to the given speed\n**ToAngle(double DesiredAngle)**\nCreates a PID loop with DesiredAngle creating desired state, **Gear_Angle_Encoder** reporting actual state and, **Angle_Control_Motor** being used to influence system.\n**Home()**\nMoves shooter up at a set speed using **Angle_Control_Motor** until **Home_Limit** is triggered the, sets the recorded angle to home angle.","x":2120,"y":288,"width":520,"height":860,"color":"6"},
		{"id":"8140f63f256c0ca8","type":"text","text":"# Note Vision\n**Note Detected** (boolean)\n\n**Relative Position**: Translation2D","x":590,"y":-733,"width":250,"height":195,"color":"5"},
		{"id":"2a6999f1618ef23f","type":"text","text":"# PhotonVision Subsystem\n## Owned Objects\n**PhotonCamera : aprilTagCam**\nLimelight that looks for AprilTags\n**PhotonCamera : noteCam**\nLimelight that looks for notes\n## Methods\n**getPosFromAprilTags()**\nReturns calculated field-relative position from AprilTags\n**getRelativeNotePos()**\nReturns position of nearest note relative to bot\n### Periodic\nSends data from **getPosFromAprilTags** and **getRelativeNotePos** to Networktables","x":61,"y":-935,"width":460,"height":600,"color":"6"}
	],
	"edges":[
		{"id":"8f93207b79a2c531","fromNode":"d8b09029cdfc9ab5","fromSide":"bottom","toNode":"11eed2cce71d223c","toSide":"left","fromEnd":"arrow","color":"2"},
		{"id":"381fc09cc3559888","fromNode":"9bcbe8409c3d8569","fromSide":"left","toNode":"d4de06057521088d","toSide":"right","fromEnd":"arrow","color":"2"},
		{"id":"ce3d922721842091","fromNode":"f02a178141b91c2f","fromSide":"bottom","toNode":"88d72345f73648b5","toSide":"top","color":"1"},
		{"id":"269ce59ac1d34d79","fromNode":"689c10c5bbfdfa06","fromSide":"bottom","toNode":"88d72345f73648b5","toSide":"top","color":"1"},
		{"id":"007dc7ef42579526","fromNode":"88d72345f73648b5","fromSide":"left","toNode":"3f84f27716a59e93","toSide":"right","color":"4"},
		{"id":"a4f8b26a26b906ad","fromNode":"88d72345f73648b5","fromSide":"left","toNode":"d8b09029cdfc9ab5","toSide":"right","color":"4"},
		{"id":"eb20918f894db641","fromNode":"88d72345f73648b5","fromSide":"bottom","toNode":"9bcbe8409c3d8569","toSide":"right","color":"4"},
		{"id":"cb36ecf0107c46dc","fromNode":"0d7fe47949d560bf","fromSide":"left","toNode":"88d72345f73648b5","toSide":"top","color":"1"},
		{"id":"59a4a03632c9cc54","fromNode":"88d72345f73648b5","fromSide":"bottom","toNode":"11eed2cce71d223c","toSide":"top","color":"6"},
		{"id":"e6ccd6b5f9a05bba","fromNode":"3f84f27716a59e93","fromSide":"left","toNode":"fb5458938437d04c","toSide":"top","color":"5"},
		{"id":"227133fb50ec6beb","fromNode":"2a6999f1618ef23f","fromSide":"right","toNode":"8140f63f256c0ca8","toSide":"left","color":"5"},
		{"id":"1a2c649b6dc95890","fromNode":"8140f63f256c0ca8","fromSide":"right","toNode":"3f84f27716a59e93","toSide":"left","color":"5"},
		{"id":"63f57e1fcdb730ba","fromNode":"fb5458938437d04c","fromSide":"bottom","toNode":"9bcbe8409c3d8569","toSide":"top","color":"5"},
		{"id":"07068071c34df9b3","fromNode":"f779bc9415192c95","fromSide":"bottom","toNode":"d4de06057521088d","toSide":"top","color":"5"},
		{"id":"aceb6b3b6c97bb5d","fromNode":"f779bc9415192c95","fromSide":"right","toNode":"d8b09029cdfc9ab5","toSide":"left","color":"5"},
		{"id":"5502dfef7f358a53","fromNode":"3f84f27716a59e93","fromSide":"left","toNode":"69f0bad6e3b661f2","toSide":"bottom","fromEnd":"arrow","color":"2"},
		{"id":"3d2d8a051e56cae0","fromNode":"88d72345f73648b5","fromSide":"right","toNode":"02c968e10b50fbcc","toSide":"left","color":"6"},
		{"id":"bbee32c280e18e7d","fromNode":"88d72345f73648b5","fromSide":"right","toNode":"3f9733d2349e77bb","toSide":"left","color":"6"},
		{"id":"97cf193bf0b8d978","fromNode":"2a6999f1618ef23f","fromSide":"bottom","toNode":"f779bc9415192c95","toSide":"top","color":"5"},
		{"id":"6ff051714c816867","fromNode":"d8b09029cdfc9ab5","fromSide":"left","toNode":"fb5458938437d04c","toSide":"right","color":"5"},
		{"id":"75d6ba95ad4a52a8","fromNode":"59673aa5d927cf53","fromSide":"top","toNode":"9d80039772338167","toSide":"bottom","color":"1","label":"Information"},
		{"id":"607be88bb6cb9484","fromNode":"9d80039772338167","fromSide":"left","toNode":"d0983a8a502d3c67","toSide":"right","color":"4","label":"Trigger"},
		{"id":"48fa50d7ec0a711f","fromNode":"749c26674dd17afa","fromSide":"top","toNode":"c1d0a4743640d0cb","toSide":"bottom","fromEnd":"arrow","color":"5"},
		{"id":"9a9776a61337eeee","fromNode":"749c26674dd17afa","fromSide":"top","toNode":"d0983a8a502d3c67","toSide":"bottom","fromEnd":"arrow","color":"5","label":"Publish/\nSubscribe"},
		{"id":"da58458f635f7915","fromNode":"9d80039772338167","fromSide":"bottom","toNode":"c1d0a4743640d0cb","toSide":"top","color":"6","label":"Instant Command"}
	]
}